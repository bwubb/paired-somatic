
with open(config.get('project',{}).get('normal_list','normals.list'),'r') as infile:
    SAMPLES=infile.read().splitlines()

with open(config['project']['bam_list'],'r') as b:
        BAMS=dict(line.split('\t') for line in b.read().splitlines())

with open(config.get('project',{}).get('pair_list','pairs.list'),'r') as p:
    PAIRS=dict(line.split('\t') for line in p.read().splitlines())

def project_vcf_input(wildcards):
    return f"data/work/{config['project']['name']}/gatk/haplotype.chr{wildcards.chr}.vcf.gz"

def tumor_haplotype_input(wildcards):
    return {'bam':BAMS[wildcards.tumor],'germline_vcf':f'data/work/{PAIRS[wildcards.tumor]}/{wildcards.targets}/gatk/haplotype.chr{wildcards.chr}.non-ref.vcf.gz'}

def concat_vcf_input(wildcards):
    #chr=list(range(1,23))+['X']
    T=[f'data/work/{wildcards.tumor}/{wildcards.targets}/gatk/haplotype.chr{chr}.gga.vcf.gz' for chr in list(range(1,23))+['X']]
    N=[f'data/work/{PAIRS[wildcards.tumor]}/{wildcards.targets}/gatk/haplotype.chr{chr}.non-ref.vcf.gz' for chr in list(range(1,23))+['X']]
    return {'tumor':T,'normal':N}

localrules: all,all_gga

wildcard_constraints:
    chr="[0-9]{1,2}|[X-Y]{1}"

rule all:
    input:
        expand("data/work/{tumor}/{targets}/gatk/haplotype.merged.vcf.gz",tumor=PAIRS.keys(),targets=config['resources']['library']['targets_key'])

rule all_gga:
    input:
        expand("data/work/{tumor}/{targets}/gatk/haplotype.chr{chr}.gga.vcf.gz",tumor=PAIRS.keys(),targets=config['resources']['library']['targets_key'],chr=list(range(1,23))+['X'])

rule Select_Germline_byChr_Targets:
    input:
        project_vcf_input
    output:
        "data/work/{sample}/{targets}/gatk/haplotype.chr{chr}.non-ref.vcf.gz"
    params:
        bed=config['resources']['library']['targets_bed'],
        #bed=config['resources']['library']['targets_intervals'],
        sample=lambda wildcards: wildcards.sample,
        reference=config['resources']['reference']['fasta']
    shell:
        #-U exclude sites without a called genotype
        #-a trim alternate alleles not seen in subset. Type A, G and R INFO and FORMAT fields will also be trimmed 
        #-x select/exclude sites where the non-reference alleles are exclusive (private) to the subset samples
        "bcftools view -Ua -T {params.bed} -s {params.sample} -e \"ALT=='*' || ALT=='.'\" -O z -o {output} {input} && tabix -p vcf {output}"
        #"java -Xmx10g -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T SelectVariants -V {input} -L {params.bed} -sn {params.sample} -env  -trimAlternates --selectTypeToExclude SYMBOLIC -o {output}"

rule HaplotypeCaller_byChr_GermlineSites:
    input:
        unpack(tumor_haplotype_input)
    output:
        "data/work/{tumor}/{targets}/gatk/haplotype.chr{chr}.germline_sites.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta']
    shell:
        "java -Xmx10g -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T HaplotypeCaller -I {input.bam} -L {input.germline_vcf} -o {output} -G Standard -G AS_Standard"
#May need to remove AS_Standard annotations from tumor or both
#Missing AS_MQ value (AS_MQ; missing ={float})
rule HaplotypeCaller_byChr_GenotypeGivenAlleles:
    input:
        unpack(tumor_haplotype_input)
    output:
        "data/work/{tumor}/{targets}/gatk/haplotype.chr{chr}.gga.vcf.gz"
    params:
        reference=config['resources']['reference']['fasta']
    shell:
        "java -Xmx10g -jar $HOME/software/GenomeAnalysisTK-3.7/GenomeAnalysisTK.jar -R {params.reference} -T HaplotypeCaller -I {input.bam} --alleles {input.germline_vcf} --genotyping_mode GENOTYPE_GIVEN_ALLELES -o {output} -G Standard -G AS_Standard"

rule Concat_Isec_Merge:
    input:
        unpack(concat_vcf_input)
    output:
        tumor="data/work/{tumor}/{targets}/gatk/haplotype.concat.gga.vcf.gz",
        pair="data/work/{tumor}/{targets}/gatk/haplotype.merged.vcf.gz"
    params:
        output_normal=lambda wildcards: f"data/work/{PAIRS[wildcards.tumor]}/{wildcards.targets}/gatk/haplotype.concat.non-ref.vcf.gz",
        workdir="data/work/{tumor}/{targets}/gatk"
    shell:
        """
        bcftools concat -O v {input.tumor} | sed -e 's/AS_MQ;/AS_MQ=\.;/' | bgzip -c > {output.tumor} && tabix -fp vcf {output.tumor}
        bcftools concat -O v {input.normal} | sed -e 's/AS_MQ;/AS_MQ=\.;/' | bgzip -c >{params.output_normal} && tabix -fp vcf {params.output_normal}
        bcftools isec -O z -p {params.workdir} {output.tumor} {params.output_normal}
        bcftools merge -O z -o {output.pair} {params.workdir}/0002.vcf.gz {params.workdir}/0003.vcf.gz && tabix -fp vcf {output.pair}
        """