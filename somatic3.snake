import tabix
import csv
import os
import errno
import yaml
from pybedtools import BedTool

#include: './mutect2.snake'
#include: './strelka2.snake'
#include: './vardictjava.snake'
#include: './varscan2_somatic.snake'

#CHECK FOR sequenza-snakemake.R

#version update
#sample_targets_config, I want to be able to run all somatic, with sample:targets_key mapping

#Workdir needs to change

def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc: # Python >2.5
        if exc.errno==errno.EEXIST and os.path.isdir(path):
            pass


### INIT ###
#sample_list in config, default is samples.list
#with open(config['project']['sample_list'],'r') as i:
#    SAMPLES=i.read().splitlines()
#    for sample in SAMPLES:
#        mkdir_p('logs/cluster/%s' % sample)

with open(config['project']['pair_list'],'r') as p:
    PAIRS=dict(line.split('\t') for line in p.read().splitlines())

###if config['project'].get('sample_target_config',False):
with open(config['project']['sample_target_config'],'r') as FILE:
    TARGET_CONFIG=yaml.load(FILE)

print(TARGET_CONFIG)
#else:
#    TARGET_CONFIG={}
#    for sample in SAMPLES:
#        TARGET_CONFIG[sample]=config['resources']['targets_key']

#WORKDIR=f"data/work/{config['resources']['targets_key']}"
WORKDIR=lambda x: f'data/work/{TARGET_CONFIG[x]}' #TEST THIS WORKS WITH EXPAND
TUMORS=PAIRS.keys()
### ###

#print([WORKDIR(tumor) for tumor in TUMORS])

#wildcard_constraints:
#    work_dir=f"data/work/{config['resources']['targets_key']}",
#    results_dir=f"data/final/{config['project']['name']}"

rule all:
    input:
        [WORKDIR(tumor) for tumor in TUMORS]
        expand("{work_dir}({tumor})/{tumor}/test/work_file.txt",work_dir=WORKDIR(),tumor=TUMORS)
        #mutect2=expand("{work_dir}({tumor})/{tumor}/mutect2/somatic.twice_filtered.vcf.gz",work_dir=WORKDIR,tumor=TUMORS)
#        strelka2=expand("{work_dir}/{tumor}/strelka2/somatic.raw.vcf.gz",work_dir=WORKDIR,tumor=TUMORS),
#        vardictjava=expand("{work_dir}/{tumor}/vardict/somatic.twice_filtered.vcf.gz",work_dir=WORKDIR,tumor=TUMORS),
#        varscan2=expand("{work_dir}/{tumor}/varscan2/somatic.fpfilter.vcf.gz",work_dir=WORKDIR,tumor=TUMORS)

rule work:
    input:
    output:
        "{work_dir}({tumor})/{tumor}/test/work_file.txt"
    shell:
        "touch {output}"
        
